import{_ as t,c as o,a as l,o as i}from"./app-mXHhDMsf.js";const r={};function a(n,e){return i(),o("div",null,e[0]||(e[0]=[l('<div class="hint-container tip"><p class="hint-container-title">提问</p><p>描述一下 Flex box</p></div><h2 id="flex-box" tabindex="-1"><a class="header-anchor" href="#flex-box"><span>Flex Box</span></a></h2><p>Flex Box 即<strong>弹性盒布局模型</strong>。</p><p>任何一个容器都可以指定为Flex布局。</p><p>采用Flex布局的元素，称为Flex容器，简称容器。它的所有子元素自动成为容器成员。</p><p>在容器上，可以设置以下属性：</p><ul><li><code>flex-direction</code>: 主轴的方向，默认值是 row</li><li><code>flex-wrap</code> : 一条轴线排不下时，如何换行，默认值是 nowrap</li><li><code>flex-flow</code> : flex-direction 和 flex-wrap 的简写形式，默认值是 row nowrap</li><li><code>justify-content</code> 定义容器成员在主轴上的对齐方式</li><li><code>align-items</code> 定义项目成员在交叉轴上的对齐方式</li><li><code>align-content</code> 定义多根轴线的对齐方式，如果容器成员只有一根轴线，该属性不起作用</li></ul><p>在项目成员上，可以设置以下属性：</p><ul><li><code>order</code> 定义成员的排列顺序。数值越小，排列越靠前，默认为 0</li><li><code>flex-grow</code> 定义成员的放大比例，默认为 0</li><li><code>flex-shrink</code> 定义成员的缩小比例，默认为 1</li><li><code>flex-basis</code> 定义在分配多余空间之前，成员占据的主轴空间，默认为 auto</li><li><code>flex</code> flex-grow, flex-shrink , flex-basis 的简写，默认为 0 1 auto</li><li><code>align-self</code> 定义单个成员的对齐方式</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>flex布局是css3新增的布局方式，可以通过将一个元素的display属性声明为 flex 从而使元素成为flex容器。</p><p>一个容器默认有两条轴，一个是水平的主轴，一个是与主轴垂直的交叉轴，可以声明主轴的方向、定义容器成员的主轴上的对齐方式， 交叉轴的对齐方式、换行方式等。对容器成员，可以定义排列顺序、空间利用方式、对齐方式等。</p>',12)]))}const p=t(r,[["render",a]]),d=JSON.parse('{"path":"/interview/FlexGrid/","title":"flex弹性布局","lang":"zh-CN","frontmatter":{"title":"flex弹性布局","createTime":"2025/03/14 10:59:42","permalink":"/interview/FlexGrid/","description":"提问 描述一下 Flex box Flex Box Flex Box 即弹性盒布局模型。 任何一个容器都可以指定为Flex布局。 采用Flex布局的元素，称为Flex容器，简称容器。它的所有子元素自动成为容器成员。 在容器上，可以设置以下属性： flex-direction: 主轴的方向，默认值是 row flex-wrap : 一条轴线排不下时，如何...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"flex弹性布局\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-14T07:08:59.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.l0v3ch4n.top/interview/FlexGrid/"}],["meta",{"property":"og:site_name","content":"L0v3ch4n"}],["meta",{"property":"og:title","content":"flex弹性布局"}],["meta",{"property":"og:description","content":"提问 描述一下 Flex box Flex Box Flex Box 即弹性盒布局模型。 任何一个容器都可以指定为Flex布局。 采用Flex布局的元素，称为Flex容器，简称容器。它的所有子元素自动成为容器成员。 在容器上，可以设置以下属性： flex-direction: 主轴的方向，默认值是 row flex-wrap : 一条轴线排不下时，如何..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-14T07:08:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-14T07:08:59.000Z"}]]},"readingTime":{"minutes":1.54,"words":463},"git":{"createdTime":1741936139000,"updatedTime":1741936139000,"contributors":[{"name":"L0v3ch4n","username":"L0v3ch4n","email":"cuberwei0@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/L0v3ch4n?v=4","url":"https://github.com/L0v3ch4n"}]},"autoDesc":true,"filePathRelative":"notes/interview/CSS/04-flex弹性布局.md","headers":[]}');export{p as comp,d as data};
