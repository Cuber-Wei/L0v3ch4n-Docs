import{_ as t,c as o,a as i,o as a}from"./app-mXHhDMsf.js";const n={};function c(r,e){return a(),o("div",null,e[0]||(e[0]=[i('<div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li><code>v-if</code> 和 <code>v-show</code> 有什么共同点？</li><li>有什么区别？</li><li>该如何选择使用哪个？</li></ol></div><h2 id="共同点" tabindex="-1"><a class="header-anchor" href="#共同点"><span>共同点</span></a></h2><ul><li>都是Vue的内置指令</li><li>都能控制元素的<strong>显示和隐藏</strong></li></ul><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h2><ul><li><p><code>v-show</code> 是通过控制 元素 的 <code>display</code>， 通过设置为 <code>none</code> 来实现元素的隐藏， 初始值无论是true或false，都会进行编译，且只会编译一次，后续状态变更仅改变 <code>display</code>的值。 频繁切换开销比较小。</p></li><li><p><code>v-if</code> 是 动态的向 DOM树中插入和删除DOM元素，若初始值为 false，则跳过编译。 后续状态变更，每次都会重新向 DOM树中插入或删除DOM元素。 频繁切换开销比较大。</p></li></ul><h2 id="选择" tabindex="-1"><a class="header-anchor" href="#选择"><span>选择</span></a></h2><ul><li>对于不需要频繁切换状态的，选择使用 <code>v-if</code></li><li>对于频繁切换状态的，选择使用 <code>v-show</code>。</li></ul>',7)]))}const l=t(n,[["render",c]]),d=JSON.parse('{"path":"/interview/vIfShow/","title":"v-if和v-show","lang":"zh-CN","frontmatter":{"title":"v-if和v-show","createTime":"2025/03/14 13:51:16","permalink":"/interview/vIfShow/","description":"提问 v-if 和 v-show 有什么共同点？ 有什么区别？ 该如何选择使用哪个？ 共同点 都是Vue的内置指令 都能控制元素的显示和隐藏 区别 v-show 是通过控制 元素 的 display， 通过设置为 none 来实现元素的隐藏， 初始值无论是true或false，都会进行编译，且只会编译一次，后续状态变更仅改变 display的值。 频繁...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"v-if和v-show\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-14T07:08:59.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.l0v3ch4n.top/interview/vIfShow/"}],["meta",{"property":"og:site_name","content":"L0v3ch4n"}],["meta",{"property":"og:title","content":"v-if和v-show"}],["meta",{"property":"og:description","content":"提问 v-if 和 v-show 有什么共同点？ 有什么区别？ 该如何选择使用哪个？ 共同点 都是Vue的内置指令 都能控制元素的显示和隐藏 区别 v-show 是通过控制 元素 的 display， 通过设置为 none 来实现元素的隐藏， 初始值无论是true或false，都会进行编译，且只会编译一次，后续状态变更仅改变 display的值。 频繁..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-14T07:08:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-14T07:08:59.000Z"}]]},"readingTime":{"minutes":0.78,"words":234},"git":{"createdTime":1741936139000,"updatedTime":1741936139000,"contributors":[{"name":"L0v3ch4n","username":"L0v3ch4n","email":"cuberwei0@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/L0v3ch4n?v=4","url":"https://github.com/L0v3ch4n"}]},"autoDesc":true,"filePathRelative":"notes/interview/Vue3/06-v-if和v-show.md","headers":[]}');export{l as comp,d as data};
