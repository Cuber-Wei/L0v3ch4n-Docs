import{_ as t,c as o,a as i,o as n}from"./app-mXHhDMsf.js";const r={};function a(c,e){return n(),o("div",null,e[0]||(e[0]=[i('<div class="hint-container tip"><p class="hint-container-title">提问</p><p>简述一下 vue3 的组件生命周期</p></div><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h2><h3 id="选项式" tabindex="-1"><a class="header-anchor" href="#选项式"><span>选项式</span></a></h3><ol><li><code>beforeCreate</code> 在组件实例初始化完成之后立即调用。</li><li><code>created</code> 在组件实例处理完所有与状态相关的选项后调用。</li><li><code>beforeMount</code> 在组件被挂载之前调用。</li><li><code>mounted</code> 在组件被挂载之后调用。</li><li><code>beforeUpdate</code> 在组件即将因为一个响应式状态变更而更新其 DOM 树之前调用。</li><li><code>updated</code> 在组件即将因为一个响应式状态变更而更新其 DOM 树之后调用。</li><li><code>beforeUnmount</code> 在一个组件实例被卸载之前调用。</li><li><code>unmounted</code> 在一个组件实例被卸载之后调用。</li><li><code>errorCaptured</code> 在捕获了后代组件传递的错误时调用。</li></ol><h3 id="组合式" tabindex="-1"><a class="header-anchor" href="#组合式"><span>组合式</span></a></h3><ol><li><code>onMounted()</code> 注册一个在组件挂载完成后执行的回调函数。</li><li><code>onUpdated()</code> 注册一个回调函数，在组件由于响应性状态改变而更新了 DOM 树后调用。</li><li><code>onUnmounted()</code> 注册一个要在组件卸载后调用的回调。</li><li><code>onBeforeMount()</code> 注册一个钩子在组件被挂载之前被调用。</li><li><code>onBeforeUpdate()</code> 注册一个钩子，在组件因为响应式状态改变而要更新 DOM 树之前调用</li><li><code>onBeforeUnmount()</code> 注册一个钩子，在组件实例被卸载之前调用。</li><li><code>onErrorCaptured()</code> 注册一个钩子，当从下级组件抛上来的错误被捕获时被调用。</li></ol>',6)]))}const l=t(r,[["render",a]]),p=JSON.parse('{"path":"/interview/life/","title":"生命周期","lang":"zh-CN","frontmatter":{"title":"生命周期","createTime":"2025/03/14 13:48:56","permalink":"/interview/life/","description":"提问 简述一下 vue3 的组件生命周期 生命周期 选项式 beforeCreate 在组件实例初始化完成之后立即调用。 created 在组件实例处理完所有与状态相关的选项后调用。 beforeMount 在组件被挂载之前调用。 mounted 在组件被挂载之后调用。 beforeUpdate 在组件即将因为一个响应式状态变更而更新其 DOM 树之前...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生命周期\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-18T03:40:38.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.l0v3ch4n.top/interview/life/"}],["meta",{"property":"og:site_name","content":"L0v3ch4n"}],["meta",{"property":"og:title","content":"生命周期"}],["meta",{"property":"og:description","content":"提问 简述一下 vue3 的组件生命周期 生命周期 选项式 beforeCreate 在组件实例初始化完成之后立即调用。 created 在组件实例处理完所有与状态相关的选项后调用。 beforeMount 在组件被挂载之前调用。 mounted 在组件被挂载之后调用。 beforeUpdate 在组件即将因为一个响应式状态变更而更新其 DOM 树之前..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T03:40:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-18T03:40:38.000Z"}]]},"readingTime":{"minutes":1.25,"words":374},"git":{"createdTime":1741936139000,"updatedTime":1742269238000,"contributors":[{"name":"L0v3ch4n","username":"L0v3ch4n","email":"cuberwei0@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/L0v3ch4n?v=4","url":"https://github.com/L0v3ch4n"}]},"autoDesc":true,"filePathRelative":"notes/interview/Vue3/04-生命周期.md","headers":[]}');export{l as comp,p as data};
